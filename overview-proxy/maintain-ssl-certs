#!/bin/ash

set -e

if [ -z "$OV_DOMAIN_NAME" ]; then
  echo "Not managing SSL certificates: OV_DOMAIN_NAME is not set."
  exit 0
fi

SUBDOMAIN_ENDINGS="plugin-entity-filter plugin-file-browser plugin-metadata plugin-multi-search plugin-word-cloud"
POLL_INTERVAL_IN_S=15

# "overview.example.com" has dns_name: "overview"; dns_domain: "example.com"
dns_name="$(echo "$OV_DOMAIN_NAME" | cut -d. -f1)"
dns_domain="$(echo "$OV_DOMAIN_NAME" | cut -d. -f2-)"

# Run ACME quickstart. It creates the haproxy hook.
# v0.0.61: acmetool warns it can't install a cronjob even though we don't
# want one. Hide the message.
acmetool quickstart --batch --response-file=/acme-responses.yml >/dev/null 2>&1

ensure_ssl_works() {
  fqdn="$1.$dns_domain"

  echo "Enabling SSL for https://$fqdn..."

  until (nslookup "$fqdn" >/maintain-ssl-last-command-output 2>&1); do
    echo "DNS entry '$fqdn' did not resolve. To enable SSL, create a DNS A, AAAA or CNAME record for '$fqdn' and point it to this machine. DNS edits sometimes take minutes to propagate. We will retry in ${POLL_INTERVAL_IN_S}s."
    sleep $POLL_INTERVAL_IN_S
  done

  until (acmetool want --batch "$fqdn" >/tmp/maintain-ssl-last-command-output 2>&1); do
    echo "The outside world cannot access 'http://$fqdn'. To enable SSL, please modify your network such that requests to '$fqdn' on ports 80 and 443 are routed to this Docker container. We will retry in ${POLL_INTERVAL_IN_S}s."
    sleep $POLL_INTERVAL_IN_S
  done

  echo "SSL enabled for https://$fqdn"
}

ensure_ssl_works "$dns_name"
for subdomain_ending in $SUBDOMAIN_ENDINGS; do
  ensure_ssl_works "$dns_name-$subdomain_ending"
done

while true; do
  echo "SSL certificates are up to date. We will check them again in 1 day."
  sleep 86400
  echo "Refreshing any nearly-expired or expired SSL certificates..."
  acmetool reconcile --batch
done
